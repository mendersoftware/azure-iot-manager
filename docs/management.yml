openapi: 3.0.3

info:
  title: Azure IoT Manager
  description: |
    API for managing Azure IoT Hub identities.
    Intended for use by the web GUI

  version: "1"

servers:
  - url: https://hosted.mender.io/api/management/v1/azure-iot-manager

# Global security definitions
security:
  - ManagementJWT: []

tags:
  - name: Management API

paths:
  /settings:
    put:
      operationId: Replace settings
      tags:
        - Management API
      summary: Configure Azure IoT Hub settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
      responses:
        204:
          description: Success, no content
        400:
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InvalidRequestError'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFoundError'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'

    get:
      operationId: Get settings
      tags:
        - Management API
      summary: Configure Azure IoT Hub settings.
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFoundError'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'

  /devices/{id}/twin:
    put:
      operationId: Replace Twin
      tags:
        - Management API
      summary: Replace the device twin desired properties in IoT hub.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: IoT Hub device ID.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                properties:
                  type: object
                  description: >-
                    The desired device twin properties
                  additionalProperties: true
                tags:
                  description: >-
                    Device tags only visible to the user
                  type: object
                  additionalProperties:
                    type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTwin'
        400:
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InvalidRequestError'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFoundError'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'

    patch:
      operationId: Update Twin
      tags:
        - Management API
      summary: Update the device twin desired properties in IoT hub.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: IoT Hub device ID.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                properties:
                  type: object
                  description: >-
                    The desired device twin properties
                  additionalProperties: true
                tags:
                  description: >-
                    Device tags only visible to the user
                  type: object
                  additionalProperties:
                    type: string

      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTwin'
        400:
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InvalidRequestError'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFoundError'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'

    get:
      operationId: Get Twin
      tags:
        - Management API
      summary: Get the device twin from IoT hub.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: IoT Hub device ID.
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceTwin'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UnauthorizedError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ForbiddenError'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFoundError'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    ManagementJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT token issued by 'POST /api/management/v1/useradm/auth/login'

        The JWT can be alternatively passed as a cookie named "JWT".

  schemas:
    Settings:
      type: object
      properties:
        connection_string:
          type: string
          description: >-
            Shared access policy connection string for connecting IoT Hub with Mender.
            The policy requires at least the following permissions: Registry Read,
            Registry Write and Service Connect.

    DeviceTwin:
      externalDocs:
        url: >-
          https://docs.microsoft.com/en-us/rest/api/iothub/service/devices/update-twin#twin
      type: object
      properties:
        authenticationType:
          type: string
          enum:
            - certificateAuthority
            - none
            - sas
            - selfSigned
        capabilities:
          type: object
          description: Status of capabilities enabled on the device.
          properties:
            iotEdge:
              type: boolean
        cloudToDeviceMessageCount:
          type: number
          format: integer
        connectionState:
          type: string
          enum: ["Connected", "Disconnected"]
          description: The connection state of the device
        deviceEtag:
          type: string
        deviceId:
          type: string
          description: The unique ID of the device within IoT Hub.
        deviceScope:
          type: string
        etag:
          type: string
        lastActivityTime:
          type: string
          format: date-time
        properties:
          $ref: '#/components/schemas/TwinProperties'
        status:
          type: string
          enum: ["enabled", "disabled"]
          description: >-
            The status of the device.
            If disabled, the device cannot connect to the service.
        statusReason:
          type: string
          description: Reason for last status change, if any.
        statusUpdateTime:
          type: string
          format: date-time
        tags:
          type: object
          description: >-
            User-defined key/value pairs assigned to the device.
            The object is allowed to have a maximum depth of 10,
            and must be less than 4KiB in size.
          additionalProperties: true
        version:
          type: integer
        X509Thumbprint:
          $ref: '#/components/schemas/X509Thumbprint'

    TwinProperties:
      type: object
      description: >-
        The desired and reported properties of the device.
        The objects are allowed to have a maximum depth of 10,
        and must be less than 4KiB in size.
      properties:
        desired:
          type: object
          additionalProperties: true
        reported:
          type: object
          additionalProperties: true

    X509Thumbprint:
      type: object
      description: The x509 thumbprint of the device.
      properties:
        primaryThumbprint:
          type: string
        secondaryThumbprint:
          type: string

    Error:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
        request_id:
          type: string
          description:
            Request ID passed with the request X-Men-Requestid header
            or generated by the server.
      description: Error descriptor.
      example:
        error: "<error description>"
        request_id: "eed14d55-d996-42cd-8248-e806663810a8"

  responses:
    InternalServerError:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "internal error"
            request_id: "eed14d55-d996-42cd-8248-e806663810a8"

    InvalidRequestError:
      description: Invalid Request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "bad request parameters"
            request_id: "eed14d55-d996-42cd-8248-e806663810a8"

    UnauthorizedError:
      description: The user does not have authorization to access resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Unauthorized"
            request_id: "eed14d55-d996-42cd-8248-e806663810a8"

    ForbiddenError:
      description: The user is not permitted to access the resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Forbidden"
            request_id: "eed14d55-d996-42cd-8248-e806663810a8"

    NotFoundError:
      description: Resource not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "not found"
            request_id: "eed14d55-d996-42cd-8248-e806663810a8"
